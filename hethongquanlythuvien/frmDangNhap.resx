<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>